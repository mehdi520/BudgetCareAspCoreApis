// <auto-generated />
using System;
using BudgetCareApis.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BudgetCareApis.Data.Migrations
{
    [DbContext(typeof(BudgetCareDBContext))]
    [Migration("20250519101556_BondnumberTypeChange")]
    partial class BondnumberTypeChange
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BudgetCareApis.Data.Entities.BondsDraw", b =>
                {
                    b.Property<int>("DrawId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("draw_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DrawId"));

                    b.Property<DateTime>("DrawDate")
                        .HasColumnType("datetime")
                        .HasColumnName("draw_date");

                    b.Property<int>("DrawNo")
                        .HasColumnType("int")
                        .HasColumnName("draw_no");

                    b.Property<string>("FirstPrizeWorth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("first_prize_worth");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int")
                        .HasColumnName("schedule_id");

                    b.Property<string>("SecondPrizeWorth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("second_prize_worth");

                    b.Property<string>("ThirdPrizeWorth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("third_prize_worth");

                    b.HasKey("DrawId");

                    b.ToTable("BondsDraws");
                });

            modelBuilder.Entity("BudgetCareApis.Data.Entities.BondsRecordsYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Year")
                        .HasColumnType("int")
                        .HasColumnName("year");

                    b.HasKey("Id");

                    b.ToTable("BondsRecordsYear", (string)null);
                });

            modelBuilder.Entity("BudgetCareApis.Data.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("createdAt");

                    b.Property<string>("Description")
                        .HasMaxLength(3500)
                        .HasColumnType("nvarchar(3500)")
                        .HasColumnName("description");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("title");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updatedAt");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.HasKey("Id")
                        .HasName("PK__Category__3213E83F5E9A4269");

                    b.HasIndex("UserId");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("BudgetCareApis.Data.Entities.DrawAnalyze", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Json")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("json");

                    b.HasKey("Id");

                    b.ToTable("DrawAnalyze", (string)null);
                });

            modelBuilder.Entity("BudgetCareApis.Data.Entities.DrawWinsBond", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BoundNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("bound_no");

                    b.Property<int>("DrawId")
                        .HasColumnType("int")
                        .HasColumnName("draw_id");

                    b.Property<int>("Position")
                        .HasColumnType("int")
                        .HasColumnName("position");

                    b.HasKey("Id");

                    b.ToTable("DrawWinsBonds");
                });

            modelBuilder.Entity("BudgetCareApis.Data.Entities.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("amount");

                    b.Property<int>("CatId")
                        .HasColumnType("int")
                        .HasColumnName("catId");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("createdAt");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("description");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updatedAt");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.HasKey("Id")
                        .HasName("PK__Expense__3213E83F74EAE88D");

                    b.ToTable("Expense", (string)null);
                });

            modelBuilder.Entity("BudgetCareApis.Data.Entities.Income", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("amount");

                    b.Property<int>("CatId")
                        .HasColumnType("int")
                        .HasColumnName("catId");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("createdAt");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<string>("Desciption")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("desciption");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updatedAt");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.HasKey("Id")
                        .HasName("PK__Income__3213E83F3D73790A");

                    b.ToTable("Income", (string)null);
                });

            modelBuilder.Entity("BudgetCareApis.Data.Entities.Note", b =>
                {
                    b.Property<int>("NoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("note_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NoteId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("details");

                    b.Property<int>("NoteBookId")
                        .HasColumnType("int")
                        .HasColumnName("note_book_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("title");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("NoteId");

                    b.HasIndex("NoteBookId");

                    b.HasIndex("UserId");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("BudgetCareApis.Data.Entities.NoteBook", b =>
                {
                    b.Property<int>("NoteBookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("note_book_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NoteBookId"));

                    b.Property<string>("IconColor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("icon_color");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("title");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("NoteBookId");

                    b.HasIndex("UserId");

                    b.ToTable("NoteBook", (string)null);
                });

            modelBuilder.Entity("BudgetCareApis.Data.Entities.ScheduleBond", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Amount")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("amount");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("date");

                    b.Property<string>("Day")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("day");

                    b.Property<bool>("IsAnnounced")
                        .HasColumnType("bit")
                        .HasColumnName("is_announced");

                    b.Property<bool>("IsPremium")
                        .HasColumnType("bit")
                        .HasColumnName("is_premium");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("place");

                    b.Property<int>("YearId")
                        .HasColumnType("int")
                        .HasColumnName("year_id");

                    b.HasKey("Id");

                    b.ToTable("ScheduleBonds");
                });

            modelBuilder.Entity("BudgetCareApis.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("createdAt");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("email");

                    b.Property<string>("Image")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("image");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)")
                        .HasColumnName("password");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("phone");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updatedAt");

                    b.HasKey("Id")
                        .HasName("PK__User__3213E83F99B72138");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("BudgetCareApis.Data.Entities.Category", b =>
                {
                    b.HasOne("BudgetCareApis.Data.Entities.User", "User")
                        .WithMany("Categories")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Category__userId__4D5F7D71");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BudgetCareApis.Data.Entities.Note", b =>
                {
                    b.HasOne("BudgetCareApis.Data.Entities.NoteBook", "NoteBook")
                        .WithMany("Notes")
                        .HasForeignKey("NoteBookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Notes_NoteBook");

                    b.HasOne("BudgetCareApis.Data.Entities.User", "User")
                        .WithMany("Notes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Notes_User");

                    b.Navigation("NoteBook");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BudgetCareApis.Data.Entities.NoteBook", b =>
                {
                    b.HasOne("BudgetCareApis.Data.Entities.User", "User")
                        .WithMany("NoteBooks")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_NoteBook_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BudgetCareApis.Data.Entities.NoteBook", b =>
                {
                    b.Navigation("Notes");
                });

            modelBuilder.Entity("BudgetCareApis.Data.Entities.User", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("NoteBooks");

                    b.Navigation("Notes");
                });
#pragma warning restore 612, 618
        }
    }
}
